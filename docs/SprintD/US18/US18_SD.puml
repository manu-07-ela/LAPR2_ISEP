@startuml
autonumber
'hide footbox
actor "Administrator" as ADMIN

participant ": SendCovid19ReportUI" as UI
participant ": SendCovid19ReportController" as CTRL
participant ": Company" as comp
participant ": TestStore" as store
participant "report: Covid19Report" as report
participant ":SimpleLinearRegression" as sRegression
participant ":MultipleLinearRegression" as mRegression

activate ADMIN
ADMIN -> UI : Initiates the process of sending a Covid-19 Report to NHS.
activate UI
UI --> ADMIN : Request the current day
deactivate UI

ADMIN -> UI : Introduce the current day
activate UI
UI -> CTRL : getAvailableTypesOfData()
activate CTRL
CTRL -> comp : getAvailableTypesOfData()
activate comp
comp --> CTRL : availableTypesOfData
deactivate comp
CTRL --> UI : availableTypesOfData
deactivate CTRL
UI --> ADMIN : Show the type of data (day or week)  and ask to select one
deactivate UI

ADMIN -> UI : Select the desired type of data
activate UI
UI --> ADMIN : Request the number of historical points
deactivate UI

ADMIN -> UI : Introduce the number of historical points
activate UI

UI --> ADMIN : Request the dates interval
deactivate UI

ADMIN -> UI : Defines the dates interval to fit the model
activate UI
UI -> CTRL : getAvailableRegressionModels()
activate CTRL
CTRL -> comp : getAvailableRegressionModels()
activate comp
comp --> CTRL : availableRegressionModels
deactivate comp
CTRL --> UI : availableRegressionModels
deactivate CTRL
UI --> ADMIN : Show available regression models and ask to select one
deactivate UI

ADMIN-> UI : Select the desired regression model
activate UI
alt regression model = Simple linear regression
UI -> CTRL : getAvailableIndependentVariables()
activate CTRL
CTRL -> comp : getAvailableIndependentVariables()
activate comp
comp --> CTRL : availableIndependentVariables()
deactivate comp
CTRL --> UI : availableIndependentVariables()
deactivate CTRL
UI --> ADMIN : Show the available independent variables and ask to select one
deactivate UI
ADMIN-> UI : Select the desired independent variable
activate UI
end

UI --> ADMIN : Request the significance level
deactivate UI

ADMIN -> UI : Introduce the significance level
activate UI

UI --> ADMIN : Request the confidence level
deactivate UI

ADMIN -> UI : Introduce the confidence level
activate UI

UI --> ADMIN :  Presents all data and requests confirmation
deactivate UI

ADMIN -> UI : Confirms the data.
activate UI
UI -> CTRL : sendCovid19Report(initial,end,current,historicalPoints,typeOfData,\nregressionModel,independentVariable,significanceLevel,confidenceLevel)
activate CTRL
CTRL -> comp : testStore = getTestStore()
activate comp
deactivate comp
CTRL -> store : yInterval = getNumberOfPositiveCovidTestsForDayInInterval(initialDate, endDate)
activate store
deactivate store
CTRL -> store : yHistoricalPoints = getNumberOfPositiveCovidTestsForDayHistoricalPoints(current day, historical points)
activate store
deactivate store
alt regressionModel = "Simple Linear"
alt independentVariable = "Tests Performed"
CTRL -> store : xInterval =getNumberOfTestsPerformedForDayInInterval(initialDate,endDate)
activate store
deactivate store
CTRL -> store : xHistoricalPoints = getNumberOfTestsPerformedForDayHistoricalPoints(currentDay,historicalPoints)
activate store
deactivate store
else
CTRL -> store : xInterval =getMeanAgeForDayInInterval(initialDate,endDate)
activate store
deactivate store
CTRL -> store : xHistoricalPoints = getMeanAgeForDayHistoricalPoints(currentDay,historicalPoints)
activate store
deactivate store
end
CTRL -> comp : createCovid19Report(xInterval, yInterval, xHistoricalPoints, yHistoricalPoints, confidenceLevel, significanceLevel, currentDay, historicalPoints,typeData)
activate comp
comp --> report** :create(xInterval, yInterval, xHistoricalPoints, yHistoricalPoints, confidenceLevel, significanceLevel, currentDay, historicalPoints,typeData)
alt typeOfDate ="Day"
report -> report : getIntervalDates()
activate report
deactivate report
else
report -> report : getHistoricalWeeks()
activate report
deactivate report
end
report --> sRegression** : create(xInterval,yInterval, xHistoricalPoints,yHistoricalPoints,confidenceLevel,significanceLevel,dateInformation)
deactivate comp
else

CTRL -> store : x1Interval =getNumberOfTestsPerformedForDayInInterval(initialDate,endDate)
activate store
deactivate store
CTRL -> store : x1HistoricalPoints = getNumberOfTestsPerformedForDayHistoricalPoints(currentDay,historicalPoints)
activate store
deactivate store

CTRL -> store : x2Interval =getMeanAgeForDayInInterval(initialDate,endDate)
activate store
deactivate store
CTRL -> store : x2HistoricalPoints = getMeanAgeForDayHistoricalPoints(currentDay,historicalPoints)
activate store
deactivate store
CTRL -> comp : createCovid19Report(xInterval, yInterval, xHistoricalPoints, yHistoricalPoints, confidenceLevel, significanceLevel, currentDay, historicalPoints,typeData)
activate comp
comp --> report :create(x1Interval, x2Interval,yInterval, x1HistoricalPoints,x2HistoricalPoints, yHistoricalPoints, confidenceLevel, significanceLevel, currentDay, historicalPoints,typeData)
alt typeOfDate ="Day"
report -> report : getIntervalDates()
activate report
deactivate report
else
report -> report : getHistoricalWeeks()
activate report
deactivate report
end
report --> mRegression** : create(xInterval,yInterval, xHistoricalPoints,yHistoricalPoints,confidenceLevel,significanceLevel,dateInformation)
end
deactivate comp
deactivate CTRL

deactivate comp

deactivate CTRL
UI --> ADMIN : Informs operation success.
deactivate UI

deactivate ADMIN

@enduml