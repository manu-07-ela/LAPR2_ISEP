@startuml

class Company{
-String designation

}

class RecordTestResultsUI{

}

class RecordTestResultsController{

}

class ParameterMapper{
+ToDTO(ParameterList)
}

class Test {
-code
-NhsCode
-createdAt
+AddResult(refValue,result,metric)
}

class TestParameter{
+AddResult(refValue,result,metric)
}


class TestParameterResult{
-createdAt
-value
-metric
}

class Parameter{
-code
-shortName
-description
}

class ReferenceValue{

}

class TestType{
  -String code
  -String description
  -String collectingMethod
  -List<ParameterCategories> listOfParameterCategories
  +getExternalModule()

}

interface ExternalModule{
+getReferenceValue(Parameter param)
}



RecordTestResultsUI ..> RecordTestResultsController
RecordTestResultsController ..> Company
TestType"*" -> "1" ExternalModule : makes use of
Test "*" -> "1" TestType : is of
Test "1" ---> "1..*" TestParameter : requests analysis of
Parameter "1" <- "*" TestParameter : refers to
TestParameter "1" -> "0..1" TestParameterResult : contains
TestParameterResult "1" -> "1" ReferenceValue :records



@enduml