@startuml
'https://plantuml.com/class-diagram

class Company
class Employee
class EmployeeStore
class RegisterEmployeeUI
class RegisterEmployeeController
class OrganizationRole
class SpecialistDoctor
class OrganizationRoleMapper
class EmployeeDTO
class EmployeeMapper
class OrganizationRoleStore
class EmployeeDTO
class EmployeeMapper


class Company{
-designation
+getEmployeeStore()
+getOrgRolesStore()

}

class Employee{
-name
-address
-phoneNumber
-email
-employeeId
-socCode
+Employee(name, address, phoneNumber, email, socCode)

}
class SpecialistDoctor{
-doctorIndexNumber
+SpecialistDoctor(name address, phoneNumber, email, socCode, doctorIndexNumber)

}

class OrganizationRole{
-description
+OrganizationRole(description)
}



class EmployeeStore{
+createEmployee(empDto)
+createSpecialistDoctor(empDto)
+validateEmployee(emp)
+addEmployee(emp)
+saveEmployee(emp)
}

class RegisterEmployeeController{
+getListOfOrgRoles()
+createOrganizationRole(orgRoleDto)
+createSpecialistDoctor(empDto)
+createEmployee(empDto)
+saveEmployee()

}
class EmployeeDTO{
-name
-address
-phoneNumber
-email
-employeeId
-socCode
-doctorIndexNumber
+EmployeeDTO(name, address, phoneNumber, email, socCode, doctorIndexNumber)
+EmployeeDTO(name, address, phoneNumber, email, socCode)
+getName()
+getAddress()
+getPhoneNumber()
+getSocCode()
+getDoctorIndexNumber()
}

class EmployeeMapper{
+createSpecialistDoctor(empDto)
+createEmployee(empDto)
}




class OrganizationRoleMapper{
+toOrgRole(orgRoleDto)

}

class OrganizationRoleDto{
-designation
+getDesignationDto()
}
class OrganizationRoleDto{
+getDesignationSto()

}

class OrganizationRoleMapper{
-listOrgRolesDto
+toOrganizationRole(orgRoleDto)
}

class OrganizationRoleStore{
-listOrgRole
+getListOfOrgRoles()
+createOrganizationRole(orgRoleDto)
}
class RegisterEmployeeUI{
+run()
-showOrganizationRole()
-createOrganizationRole()
-name()
-email()
-address()
-phoneNumber()
-socCode()
-doctorIndexNumber()
-createSpecialistDoctor()
-createEmployee()
-showEmployee()
-showSpecialistDoctor()


}

EmployeeMapper..>Employee
EmployeeDTO..>EmployeeMapper
Company "1"-->"1" EmployeeStore : uses
Employee<|--SpecialistDoctor
RegisterEmployeeController ..>Company
Employee --* OrganizationRole
RegisterEmployeeUI ..> RegisterEmployeeController
EmployeeStore "1"-->"*" Employee  : knows
Company "1"-->"1" OrganizationRoleStore : uses
OrganizationRoleStore "1"---->"1..*" OrganizationRole : adopts
OrganizationRoleMapper..>OrganizationRole
OrganizationRoleDto..>OrganizationRoleMapper
@enduml